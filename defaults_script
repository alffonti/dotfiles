#!/bin/bash

# Close any open System Preferences panes, to prevent them from overriding settings we’re about to change
osascript -e 'tell application "System Preferences" to quit'

# Ask for the administrator password upfront
sudo -v

# Keep-alive: update existing `sudo` time stamp until `.macos` has finished
while true; do sudo -v; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

##################
# General UI/UX  
##################

#sudo scutil --set ComputerName "m19"
#sudo scutil --set HostName "m19"
#sudo scutil --set LocalHostName "m19"
#sudo defaults write /Library/Preferences/SystemConfiguration/com.apple.smb.server NetBIOSName -string "m19"

# Disable the sound effects on boot
sudo nvram SystemAudioVolume=" "

# Disable transparency in the menu bar and elsewhere on Yosemite
defaults write com.apple.universalaccess reduceTransparency -bool true

# Set highlight color to green
# defaults write NSGlobalDomain AppleHighlightColor -string "0.764700 0.976500 0.568600"

# Set sidebar icon size to medium
defaults write NSGlobalDomain NSTableViewDefaultSizeMode -int 2

# Always show scrollbars
defaults write NSGlobalDomain AppleShowScrollBars -string "Always"
# Possible values: `WhenScrolling`, `Automatic` and `Always`

# Adjust toolbar title rollover delay
defaults write NSGlobalDomain NSToolbarTitleViewRolloverDelay -float 0

# Disable smooth scrolling (if you’re on an older Mac that messes up the animation)
defaults write NSGlobalDomain NSScrollAnimationEnabled -bool false

# Increase window resize speed
defaults write NSGlobalDomain NSWindowResizeTime -float 0.001

# Expand save panel by default
defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode -bool true
defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode2 -bool true

# Expand print panel by default
defaults write NSGlobalDomain PMPrintingExpandedStateForPrint -bool true
defaults write NSGlobalDomain PMPrintingExpandedStateForPrint2 -bool true

# Save to disk (not to iCloud) by default
defaults write NSGlobalDomain NSDocumentSaveNewDocumentsToCloud -bool false

# Automatically quit printer app once the print jobs complete
defaults write com.apple.print.PrintingPrefs "Quit When Finished" -bool true

# Disable the “Are you sure you want to open this application?” dialog
defaults write com.apple.LaunchServices LSQuarantine -bool false

# Display ASCII control characters using caret notation in standard text views
# Try e.g. `cd /tmp; unidecode "\x{0000}" > cc.txt; open -e cc.txt`
defaults write NSGlobalDomain NSTextShowsControlCharacters -bool true

# Disable Resume system-wide
defaults write com.apple.systempreferences NSQuitAlwaysKeepsWindows -bool false

# Disable automatic termination of inactive apps
defaults write NSGlobalDomain NSDisableAutomaticTermination -bool true

# Disable the crash reporter
#defaults write com.apple.CrashReporter DialogType -string "none"

# Set Help Viewer windows to non-floating mode
defaults write com.apple.helpviewer DevMode -bool true

# Reveal IP address, hostname, OS version, etc. when clicking the clock
# in the login window
sudo defaults write /Library/Preferences/com.apple.loginwindow AdminHostInfo HostName

# Disable Notification Center and remove the menu bar icon
launchctl unload -w /System/Library/LaunchAgents/com.apple.notificationcenterui.plist 2> /dev/null

# Disable automatic capitalization as it’s annoying when typing code
defaults write NSGlobalDomain NSAutomaticCapitalizationEnabled -bool false

# Disable smart dashes as they’re annoying when typing code
defaults write NSGlobalDomain NSAutomaticDashSubstitutionEnabled -bool false

# Disable automatic period substitution as it’s annoying when typing code
defaults write NSGlobalDomain NSAutomaticPeriodSubstitutionEnabled -bool false

# Disable smart quotes as they’re annoying when typing code
defaults write NSGlobalDomain NSAutomaticQuoteSubstitutionEnabled -bool false

# Disable auto-correct
defaults write NSGlobalDomain NSAutomaticSpellingCorrectionEnabled -bool false

# Set a custom wallpaper image. `DefaultDesktop.jpg` is already a symlink, and
# all wallpapers are in `/Library/Desktop Pictures/`.
osascript -e 'tell application "System Events" to set picture of every desktop to "/System/Library/Desktop Pictures/Solid Colors/Black.png"'

# Function to disable features
disable_features() {
    echo "Disabling unnecessary features..."
    local keys=(
        "NSDocumentSaveNewDocumentsToCloud"
        "NSAutomaticCapitalizationEnabled"
        "NSAutomaticPeriodSubstitutionEnabled"
        "NSAutomaticDashSubstitutionEnabled"
        "NSAutomaticQuoteSubstitutionEnabled"
        "NSAutomaticSpellingCorrectionEnabled"
        "NSAutomaticTextCompletionEnabled"
        "NSAutomaticWindowAnimationsEnabled"
        "ApplePressAndHoldEnabled"
        "AppleEnableSwipeNavigateWithScrolls"
        "NSCloseAlwaysConfirmsChanges"
        "NSUseAnimatedFocusRing"
        "NSScrollAnimationEnabled"
        "NSTextShowsControlCharacters"
        "NSQuitAlwaysKeepsWindows"
        "NSDisableAutomaticTermination"
        "com.apple.trackpad.forceClick"
    )

    for key in "${keys[@]}"; do
        defaults_write NSGlobalDomain "$key" bool false
    done

    echo "Disabled unnecessary features."
}

# Function to enable features
enable_features() {
    echo "Enabling necessary features..."
    local keys=(
        "com.apple.springing.enabled"
        "AppleShowAllExtensions"
        "NSNavPanelExpandedStateForSaveMode"
        "NSNavPanelExpandedStateForSaveMode2"
    )

    for key in "${keys[@]}"; do
        defaults_write NSGlobalDomain "$key" bool true
    done
    echo "Enabled necessary features."
}

# Function to set float values
set_float_values() {
    echo "Setting float values..."
    local float_values=(
        "com.apple.springing.delay:0.0"
        "NSGlobalDomain.NSToolbarTitleViewRolloverDelay:0.0"
        "NSGlobalDomain.NSWindowResizeTime:0.001"
    )

    for item in "${float_values[@]}"; do
        IFS=":" read -r key value <<< "$item"
        domain="${key%.*}"
        key_name="${key##*.}"
        defaults_write "$domain" "$key_name" float "$value"
    done

    echo "Float values set."
}

# Function to set text values
set_text_values() {
    echo "Setting text values..."
    local text_values=(
        "NSGlobalDomain.AppleInterfaceStyle:Dark"
        "NSGlobalDomain.AppleShowScrollBars:Always"
    )

    for item in "${text_values[@]}"; do
        IFS=":" read -r key value <<< "$item"
        domain="${key%.*}"
        key_name="${key##*.}"
        defaults_write "$domain" "$key_name" string "$value"
    done

    echo "Text values set."
}

# Main script logic
case "$1" in
    disable)
        disable_features
        ;;
    enable)
        enable_features
        ;;
    float)
        set_float_values
        ;;
    text)
        set_text_values
        ;;
    *)
        echo "Usage: $0 {disable|enable|float|text}"
        exit 1
        ;;
esac

# Apply changes
killall Dock Finder SystemUIServer

echo "All changes applied successfully."
